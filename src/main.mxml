<?xml version="1.0" encoding="utf-8"?>

<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
	minWidth="600" minHeight="600" width="100%" height="100%"
	backgroundSize="100%" backgroundColor="#222222"
	applicationComplete="onApplicationComplete()" >
	<mx:Style source="/assets/styles.css" />
	<mx:XML id="podsData"  source="data/pods.xml"/>
	<mx:Script>
		<![CDATA[
			import com.esria.samples.dashboard.events.LayoutChangeEvent;
			import com.esria.samples.dashboard.managers.PodLayoutManager;
			import com.esria.samples.dashboard.managers.StateManager;
			import com.esria.samples.dashboard.view.*;
			import mx.containers.Canvas;
			import mx.controls.Alert;
			import mx.events.*
			import mx.rpc.events.*
			import mx.rpc.http.HTTPService;

			private var podHash:Object = new Object();
			private var viewXMLList:XMLList = new XMLList();
			
			public function onApplicationComplete():void
			{
				//clearShareObjectData();
				viewXMLList = podsData.view;
				
				content.horizontalScrollPolicy = "off";
				content.verticalScrollPolicy = "off";
				content.label = viewXMLList[0].@label;
				content.percentWidth = 100;
				content.percentHeight = 100;
					
				var manager:PodLayoutManager = new PodLayoutManager();
				manager.container = content;
				manager.id = viewXMLList[0].@id;
				manager.addEventListener(LayoutChangeEvent.UPDATE, StateManager.setPodLayout);
					
				addPods(manager); 
			}
			
			private function addPods(manager:PodLayoutManager):void
			{
				var podXMLList:XMLList = viewXMLList[0].pod;
				var podLen:Number = podXMLList.length();
				var unsavedPodCount:Number = 0;
				for (var j:Number = 0; j < podLen; j++)
				{
					var podContent:PodContentBase = null;
					var podType:String = podXMLList[j].@type;
					switch (podType)
					{
						case "blank":
							podContent = new blankContent();
							break;
						default:
							break;
					}
					
					if (podContent != null)
					{
						var viewId:String = manager.id;
						var podId:String = podXMLList[j].@id;
						
						podContent.properties = podXMLList[j];
						var pod:Pod = new Pod();
						pod.id = podId;
						pod.title = podXMLList[j].@title;
						pod.addChild(podContent);
						var index:Number;
						
						if (StateManager.getMinimizedPodIndex(viewId, podId)!=-1)
						{
							index = StateManager.getMinimizedPodIndex(viewId, podId);
							manager.addMinimizedItemAt(pod, index);
						}
						else
						{
							index = StateManager.getPodIndex(viewId, podId);
							
							if (index == -1)
							{
								index = podLen + unsavedPodCount;
								unsavedPodCount += 1;
							}
							
							manager.addItemAt(pod, index, StateManager.isPodMaximized(viewId, podId));
						}
						
						podHash[pod] = manager;
					}
				}
				
				pod.addEventListener(FlexEvent.UPDATE_COMPLETE, onCreationCompletePod);
			}
			
			private function onCreationCompletePod(e:FlexEvent):void
			{
				e.currentTarget.removeEventListener(FlexEvent.UPDATE_COMPLETE, onCreationCompletePod);
				var manager:PodLayoutManager = PodLayoutManager(podHash[e.currentTarget]);
				manager.removeNullItems();
				manager.updateLayout(false);
			}
			
			private function clearShareObjectData():void
			{
				StateManager.sharedObject.clear();
			}
		]]>
	</mx:Script>
	<mx:Canvas id="content" width="100%" height="100%" />
</mx:Application>
